// Generated by CoffeeScript 1.6.3
(function() {
  var quotes,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  quotes = [
    {
      first: "You know the day destroys the night..",
      last: "Night divides the day"
    }, {
      first: "Tried to run..",
      last: "Tried to hide"
    }, {
      first: "We chased our pleasures here..",
      last: "Dug our treasures there"
    }, {
      first: "But can you still recall..",
      last: "The time we cried "
    }, {
      first: "I found an island in your arms..",
      last: "Country in your eyes"
    }, {
      first: "Arms that chain..",
      last: "Eyes that lie"
    }, {
      first: "Made the scene..",
      last: "Week to week"
    }, {
      first: "Day to day..",
      last: "Hour to hour"
    }, {
      first: "The gate is straight..",
      last: "Deep and wide"
    }
  ];

  window.FluxOn = (function() {
    function FluxOn() {
      this.setUpVideo = __bind(this.setUpVideo, this);
      this.onReady = __bind(this.onReady, this);
      document.addEventListener("deviceready", this.onReady, false);
      this.quoteIndex = 0;
    }

    FluxOn.prototype.onReady = function() {
      var _this = this;
      $("#invert").prop("disabled", false);
      $("#invert").click(function() {
        if (_this.isInverting()) {
          _this.quoteIndex = (_this.quoteIndex + 1) % quotes.length;
          $("#infobox").text(quotes[_this.quoteIndex].first);
          $("#invert").removeClass("btn-danger").addClass("btn-success").text("Break on through");
          return cordova.plugins.camerapreview.setColorEffect("none");
        } else {
          $("#infobox").text(quotes[_this.quoteIndex].last);
          $("#invert").removeClass("btn-success").addClass("btn-danger").text("To the other side");
          return cordova.plugins.camerapreview.setColorEffect("negative");
        }
      });
      return this.setUpVideo();
    };

    FluxOn.prototype.isInverting = function() {
      return $("#invert").hasClass("btn-danger");
    };

    FluxOn.prototype.setUpVideo = function() {
      var height, left, rect, top, width, _ref;
      width = parseInt($(window).width() * 0.9);
      height = width;
      $("#photo-canvas").width(width);
      $("#photo-canvas").height(height);
      _ref = $("#photo-canvas").offset(), left = _ref.left, top = _ref.top;
      rect = {
        x: left,
        y: top,
        width: width,
        height: height
      };
      cordova.plugins.camerapreview.startCamera(rect, "back");
      if (this.isInverting()) {
        return cordova.plugins.camerapreview.setColorEffect("negative");
      } else {
        return cordova.plugins.camerapreview.setColorEffect("none");
      }
    };

    return FluxOn;

  })();

}).call(this);
