// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.FluxOn = (function() {
    function FluxOn() {
      this.setUpVideo = __bind(this.setUpVideo, this);
      this.onReady = __bind(this.onReady, this);
      document.addEventListener("deviceready", this.onReady, false);
    }

    FluxOn.prototype.onReady = function() {
      var _this = this;
      $("#invert").prop("disabled", false);
      $("#invert").click(function() {
        if (_this.isInverting()) {
          $("#invert").removeClass("btn-danger").addClass("btn-success").text("Negative");
          return cordova.plugins.camerapreview.setColorEffect("none");
        } else {
          $("#invert").removeClass("btn-success").addClass("btn-danger").text("Energy");
          return cordova.plugins.camerapreview.setColorEffect("negative");
        }
      });
      return this.setUpVideo();
    };

    FluxOn.prototype.isInverting = function() {
      return $("#invert").hasClass("btn-danger");
    };

    FluxOn.prototype.setUpVideo = function() {
      var height, left, marginTop, rect, top, width, _ref;
      marginTop = parseInt($("#photo-canvas").css("margin-top"), 10);
      width = $(window).width() - 2 * marginTop;
      height = $(window).height() - $("#controls").outerHeight(true) - marginTop;
      $("#photo-canvas").width(width);
      $("#photo-canvas").height(height);
      _ref = $("#photo-canvas").offset(), left = _ref.left, top = _ref.top;
      rect = {
        x: left,
        y: top,
        width: width,
        height: height
      };
      cordova.plugins.camerapreview.startCamera(rect, "back");
      if (this.isInverting()) {
        return cordova.plugins.camerapreview.setColorEffect("negative");
      } else {
        return cordova.plugins.camerapreview.setColorEffect("none");
      }
    };

    return FluxOn;

  })();

}).call(this);
